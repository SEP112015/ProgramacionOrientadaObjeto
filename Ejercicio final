import openai

system_rol = '''Has de cuenta que eres un analizador de sentimientos,
                yo te pasa sentimientos y tu vas analizar el sentimiento de los mensajes
                y me dar치s una respuesta con al menos un caracter y como m치ximos cuatro caracteres
                SOLO RESPUESTAS NUMERICAS. donde -1 es negatividad m치xima, 0 es neutral y 1 es positividad
                m치xima, puedes ir entre esos rangos, es decir 0.3, -0.5 etc tambien son validos
                  (Puedes responder solo con ints y floats)'''


mensajes = [{"role": "system", "content": system_rol}]

class AnalizadorDeSentimientos:
    def analizar_sentimiento(self, polaridad):
        if polaridad > -0.7 and polaridad <= -0.3:
            return "\x1b[1;31m" + "Negativo" + "\x1b[0;37m" 
        elif polaridad > -0.3 and polaridad < -0.1:
            return "\x1b[1;31m" + "Algo negativo" + "\x1b[0;37m" 
        elif polaridad >= -0.1 and polaridad <= 0.1:
            return "\x1b[1;33m" + "Neutral" + "\x1b[0;37m" 
        elif polaridad >= 0.1 and polaridad <= 0.4:
            return "\x1b[1;32m" + "Algo positivo" + "\x1b[0;37m" 
        elif polaridad >= 0.4 and polaridad < 0.9:
            return "\x1b[1;32m" + "Positivo" + "\x1b[0;37m" 
        elif polaridad > 0.9:
            return "\x1b[1;32m" + "Muy positivo" + "\x1b[0;37m" 
        else: 
            return "\x1b[1;31m" + "Muy negativo" + "\x1b[0;37m" 


analizador = AnalizadorDeSentimientos()


while True:
    user_prompt = input("\x1b[1;33m" + "\nDime algo: " + "\x1b[0;37m" )
    mensajes.append({"role": "user", "content": user_prompt})

    completion = openai.ChatCompletion.create(
        model = "gpt-3.5-turbo",
        messages = mensajes,
        max_tokens = 30
    )

    respuesta = completion.choices[0].message["content"]
    mensajes.append({"role": "assistant", "content": respuesta})

    sentimiento = analizador.analizar_sentimiento(float(respuesta))

    print(sentimiento)

